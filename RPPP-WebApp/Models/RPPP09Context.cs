// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace RPPP_WebApp.Models;

public partial class RPPP09Context : DbContext
{
    public RPPP09Context()
    {
    }

    public RPPP09Context(DbContextOptions<RPPP09Context> options)
        : base(options)
    {
    }

    public virtual DbSet<Dokument> Dokument { get; set; }

    public virtual DbSet<KategorijaDokumenta> KategorijaDokumenta { get; set; }

    public virtual DbSet<Osoba> Osoba { get; set; }

    public virtual DbSet<Posao> Posao { get; set; }

    public virtual DbSet<Projekt> Projekt { get; set; }

    public virtual DbSet<Racun> Racun { get; set; }

    public virtual DbSet<Suradnik> Suradnik { get; set; }

    public virtual DbSet<Transakcija> Transakcija { get; set; }

    public virtual DbSet<Uloga> Uloga { get; set; }

    public virtual DbSet<UlogaNaProjektu> UlogaNaProjektu { get; set; }

    public virtual DbSet<Valuta> Valuta { get; set; }

    public virtual DbSet<VrstaPosla> VrstaPosla { get; set; }

    public virtual DbSet<VrstaProjekta> VrstaProjekta { get; set; }

    public virtual DbSet<VrstaSuradnika> VrstaSuradnika { get; set; }

    public virtual DbSet<VrstaTransakcije> VrstaTransakcije { get; set; }

    public virtual DbSet<VrstaZadatka> VrstaZadatka { get; set; }

    public virtual DbSet<VrstaZahtjeva> VrstaZahtjeva { get; set; }

    public virtual DbSet<Zadatak> Zadatak { get; set; }

    public virtual DbSet<ZaduzenaOsoba> ZaduzenaOsoba { get; set; }

    public virtual DbSet<Zahtjev> Zahtjev { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("*");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Dokument>(entity =>
        {
            entity.Property(e => e.DokumentId).HasColumnName("dokumentId");
            entity.Property(e => e.KategorijaDokumentaId).HasColumnName("kategorijaDokumentaId");
            entity.Property(e => e.Naslov)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("naslov");
            entity.Property(e => e.ProjektId).HasColumnName("projektId");
            entity.Property(e => e.Sadrzaj)
                .IsUnicode(false)
                .HasColumnName("sadrzaj");

            entity.HasOne(d => d.KategorijaDokumenta).WithMany(p => p.Dokument)
                .HasForeignKey(d => d.KategorijaDokumentaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Dokument_KategorijaDokumenta");

            entity.HasOne(d => d.Projekt).WithMany(p => p.Dokument)
                .HasForeignKey(d => d.ProjektId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Dokument_Projekt");
        });

        modelBuilder.Entity<KategorijaDokumenta>(entity =>
        {
            entity.Property(e => e.KategorijaDokumentaId).HasColumnName("kategorijaDokumentaId");
            entity.Property(e => e.NazivKategorijeDokumenta)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nazivKategorijeDokumenta");
        });

        modelBuilder.Entity<Osoba>(entity =>
        {
            entity.HasKey(e => e.IdOsoba).HasName("PK__Osoba__EFB80D64454C227C");

            entity.Property(e => e.IdOsoba).HasColumnName("idOsoba");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.Iban)
                .IsRequired()
                .HasMaxLength(36)
                .IsUnicode(false)
                .HasColumnName("IBAN");
            entity.Property(e => e.ImeOsobe)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("imeOsobe");
            entity.Property(e => e.PrezimeOsobe)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("prezimeOsobe");
            entity.Property(e => e.Telefon)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("telefon");
        });

        modelBuilder.Entity<Posao>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("Posao_PK");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Budzet).HasColumnName("budzet");
            entity.Property(e => e.Naziv)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("naziv");
            entity.Property(e => e.OcekivaniPocetak)
                .HasColumnType("date")
                .HasColumnName("ocekivaniPocetak");
            entity.Property(e => e.OcekivaniZavrsetak)
                .HasColumnType("date")
                .HasColumnName("ocekivaniZavrsetak");
            entity.Property(e => e.ProjektId).HasColumnName("projektId");
            entity.Property(e => e.VrstaPoslaId).HasColumnName("vrstaPoslaId");

            entity.HasOne(d => d.Projekt).WithMany(p => p.Posao)
                .HasForeignKey(d => d.ProjektId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("Posao_FK");

            entity.HasOne(d => d.VrstaPosla).WithMany(p => p.Posao)
                .HasForeignKey(d => d.VrstaPoslaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("VrstaPosla_FK");
        });

        modelBuilder.Entity<Projekt>(entity =>
        {
            entity.HasKey(e => e.IdProjekt).HasName("Projekt_PK");

            entity.Property(e => e.IdProjekt).HasColumnName("idProjekt");
            entity.Property(e => e.IdRacuna).HasColumnName("idRacuna");
            entity.Property(e => e.IdVrstaProjekta).HasColumnName("idVrstaProjekta");
            entity.Property(e => e.ImeProjekta)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("imeProjekta");
            entity.Property(e => e.KrajProjekta)
                .HasColumnType("date")
                .HasColumnName("krajProjekta");
            entity.Property(e => e.Opis)
                .IsUnicode(false)
                .HasColumnName("opis");
            entity.Property(e => e.Oznaka)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("oznaka");
            entity.Property(e => e.PocetakProjekta)
                .HasColumnType("date")
                .HasColumnName("pocetakProjekta");
            entity.HasOne(d => d.Racun).WithMany(p => p.Projekti)
                .HasForeignKey(d => d.IdRacuna)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Projekt_Racun");

            entity.HasOne(d => d.VrstaProjekta).WithMany(p => p.Projekt)
                .HasForeignKey(d => d.IdVrstaProjekta)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Projekt_VrstaProjekta");
        });

        modelBuilder.Entity<Racun>(entity =>
        {
            entity.HasKey(e => e.IdRacuna);

            entity.Property(e => e.Iban)
                .HasMaxLength(34)
                .IsFixedLength()
                .HasColumnName("IBAN");
            entity.Property(e => e.IdValuta).HasColumnName("idValuta");
            entity.Property(e => e.ImeRacuna)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.IdValutaNavigation).WithMany(p => p.Racun)
                .HasForeignKey(d => d.IdValuta)
                .HasConstraintName("FK_Racun_Valuta");
        });

        modelBuilder.Entity<Suradnik>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("Organizacija_PK");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Adresa)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("adresa");
            entity.Property(e => e.Grad)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("grad");
            entity.Property(e => e.Naziv)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("naziv");
            entity.Property(e => e.Oib)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false)
                .HasColumnName("oib");
            entity.Property(e => e.PostanskiBroj)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("postanskiBroj");
            entity.Property(e => e.VrstaSuradnikaId).HasColumnName("vrstaSuradnikaId");

            entity.HasOne(d => d.Posao).WithMany(p => p.Suradnik)
                .HasForeignKey(d => d.PosaoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("PosaoSuradnik_FK");

            entity.HasOne(d => d.VrstaSuradnika).WithMany(p => p.Suradnik)
                .HasForeignKey(d => d.VrstaSuradnikaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("Suradnik_FK");
        });

        modelBuilder.Entity<Transakcija>(entity =>
        {
            entity.HasKey(e => e.Idtransakcije);

            entity.Property(e => e.Idtransakcije).HasColumnName("IDTransakcije");
            entity.Property(e => e.Idracuna).HasColumnName("IDRacuna");
            entity.Property(e => e.IdvrstaTransakcije).HasColumnName("IDVrstaTransakcije");
            entity.Property(e => e.Iznos).HasColumnName("iznos");
            entity.Property(e => e.SmjerTransakcije)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.VanjskiIban)
                .HasMaxLength(34)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("VanjskiIBAN");

            entity.HasOne(d => d.Racun).WithMany(p => p.TransakcijaIdracunaNavigation)
                .HasForeignKey(d => d.Idracuna)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Transakcija_Racun");

            entity.HasOne(d => d.VrstaTransakcije).WithMany(p => p.Transakcija)
                .HasForeignKey(d => d.IdvrstaTransakcije)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Transakcija_VrstaTransakcije");

            entity.HasOne(d => d.UnutarnjiRacun).WithMany(p => p.TransakcijaUnutarnjiIdRacunaNavigation)
                .HasForeignKey(d => d.UnutarnjiIdRacuna)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Transakcija_Racun1");
        });

        modelBuilder.Entity<Uloga>(entity =>
        {
            entity.HasKey(e => e.IdUloga).HasName("PK__Uloga__8EAAF5C843BAE160");

            entity.HasIndex(e => e.NazivUloge, "UQ__Uloga__C737BBD8C8242D81").IsUnique();

            entity.Property(e => e.IdUloga).HasColumnName("idUloga");
            entity.Property(e => e.NazivUloge)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nazivUloge");
        });

        modelBuilder.Entity<UlogaNaProjektu>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("UlogaNaProjektu_PK");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdOsoba).HasColumnName("idOsoba");
            entity.Property(e => e.IdProjekt).HasColumnName("idProjekt");
            entity.Property(e => e.IdUloga).HasColumnName("idUloga");

            entity.HasOne(d => d.Osoba).WithMany(p => p.UlogaNaProjektu)
                .HasForeignKey(d => d.IdOsoba)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__UlogaNaPr__idOso__282DF8C2");

            entity.HasOne(d => d.Projekt).WithMany(p => p.UlogaNaProjektu)
                .HasForeignKey(d => d.IdProjekt)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__UlogaNaPr__idPro__2645B050");

            entity.HasOne(d => d.Uloga).WithMany(p => p.UlogaNaProjektu)
                .HasForeignKey(d => d.IdUloga)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__UlogaNaPr__idUlo__2739D489");
        });

        modelBuilder.Entity<Valuta>(entity =>
        {
            entity.HasKey(e => e.Idvaluta).HasName("PK_Table_1");

            entity.Property(e => e.Idvaluta).HasColumnName("IDValuta");
            entity.Property(e => e.IsoOznaka)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ISO_oznaka");
        });

        modelBuilder.Entity<VrstaPosla>(entity =>
        {
            entity.HasKey(e => e.IdVrstaPosla).HasName("VrstaPosla_PK");

            entity.Property(e => e.IdVrstaPosla).HasColumnName("idVrstaPosla");
            entity.Property(e => e.Naziv)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("naziv");
        });

        modelBuilder.Entity<VrstaProjekta>(entity =>
        {
            entity.HasKey(e => e.IdVrstaProjekta);

            entity.Property(e => e.IdVrstaProjekta).HasColumnName("idVrstaProjekta");
            entity.Property(e => e.Naziv)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("naziv");
        });

        modelBuilder.Entity<VrstaSuradnika>(entity =>
        {
            entity.HasKey(e => e.IdVrstaSuradnika).HasName("VrstaSuradnika_PK");

            entity.Property(e => e.IdVrstaSuradnika).HasColumnName("idVrstaSuradnika");
            entity.Property(e => e.Naziv)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("naziv");
            entity.Property(e => e.Opis)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("opis");
        });

        modelBuilder.Entity<VrstaTransakcije>(entity =>
        {
            entity.HasKey(e => e.IdvrstaTransakcije).HasName("PK_Table_1_1");

            entity.Property(e => e.IdvrstaTransakcije).HasColumnName("IDVrstaTransakcije");
            entity.Property(e => e.Naziv)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<VrstaZadatka>(entity =>
        {
            entity.HasKey(e => e.IdVrstaZdtk).HasName("PK__VrstaZad__24960223580F3E4E");

            entity.HasIndex(e => e.NazivVrsteZdtk, "UQ__VrstaZad__27F991753E5B22F4").IsUnique();

            entity.Property(e => e.IdVrstaZdtk).HasColumnName("idVrstaZdtk");
            entity.Property(e => e.NazivVrsteZdtk)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("nazivVrsteZdtk");
        });

        modelBuilder.Entity<VrstaZahtjeva>(entity =>
        {
            entity.HasKey(e => e.IdVrsteZahtjeva);

            entity.Property(e => e.IdVrsteZahtjeva)
                .ValueGeneratedNever()
                .HasColumnName("idVrsteZahtjeva");
            entity.Property(e => e.NazivVrsteZahtjeva)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nazivVrsteZahtjeva");
        });

        modelBuilder.Entity<Zadatak>(entity =>
        {
            entity.HasKey(e => e.IdZadatak).HasName("PK__Zadatak__05C20C623ADB62F2");

            entity.Property(e => e.IdZadatak).HasColumnName("idZadatak");
            entity.Property(e => e.IdOsoba).HasColumnName("idOsoba");
            entity.Property(e => e.IdVrstaZdtk).HasColumnName("idVrstaZdtk");
            entity.Property(e => e.IdZahtjev).HasColumnName("idZahtjev");
            entity.Property(e => e.Naziv)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("naziv");
            entity.Property(e => e.Prioritetnost)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("prioritetnost");
            entity.Property(e => e.StupanjDovrsenosti).HasColumnName("stupanjDovrsenosti");
            entity.Property(e => e.VrijemeIsporuke)
                .HasColumnType("date")
                .HasColumnName("vrijemeIsporuke");

            entity.HasOne(d => d.Osoba).WithMany(p => p.Zadatak)
                .HasForeignKey(d => d.IdOsoba)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Zadatak__idOsoba__2B0A656D");

            entity.HasOne(d => d.VrstaZadatka).WithMany(p => p.Zadatak)
                .HasForeignKey(d => d.IdVrstaZdtk)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Zadatak__idVrsta__2BFE89A6");

            entity.HasOne(d => d.Zahtjev).WithMany(p => p.Zadatak)
                .HasForeignKey(d => d.IdZahtjev)
                .HasConstraintName("FK_Zadatak_Zahtjev");
        });

        modelBuilder.Entity<ZaduzenaOsoba>(entity =>
        {
            entity.HasKey(e => new { e.IdOsoba, e.IdZadatak, e.IdZaduzenja }).HasName("ZaduženaOsoba_PK");

            entity.Property(e => e.IdOsoba).HasColumnName("idOsoba");
            entity.Property(e => e.IdZadatak).HasColumnName("idZadatak");
            entity.Property(e => e.IdZaduzenja)
                .ValueGeneratedOnAdd()
                .HasColumnName("idZaduženja");

            entity.HasOne(d => d.Osoba).WithMany(p => p.ZaduzenaOsoba)
                .HasForeignKey(d => d.IdOsoba)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ZaduženaOsoba_Osoba");

            entity.HasOne(d => d.Zadatak).WithMany(p => p.ZaduzenaOsoba)
                .HasForeignKey(d => d.IdZadatak)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ZaduženaOsoba_Zadatak");
        });

        modelBuilder.Entity<Zahtjev>(entity =>
        {
            entity.HasKey(e => e.IdZahtjev);

            entity.Property(e => e.IdZahtjev).HasColumnName("idZahtjev");
            entity.Property(e => e.IdVrsteZahtjeva).HasColumnName("idVrsteZahtjeva");
            entity.Property(e => e.Naziv)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("naziv");

            entity.HasOne(d => d.IdVrsteZahtjevaNavigation).WithMany(p => p.Zahtjev)
                .HasForeignKey(d => d.IdVrsteZahtjeva)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Zahtjev_VrstaZahtjeva");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}